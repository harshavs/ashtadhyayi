#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import unittest
from ashtadhyayi.aardhadhatuke import आर्धधातुके_२_४_३५
from ashtadhyayi.tinantarupam import तिङन्तरूपम्
from ashtadhyayi.lasya import लकारः


class TestAardhadhatuke(unittest.TestCase):

    def test_आर्धधातुके_२_४_३५_अद्(self):
        धातुः = {'धातुः': 'अद्', 'सेट्': True}
        पदम् = तिङन्तरूपम्(धातुः, लकारः.लृट्, True, 0, 0)
        पदम्.विकरणप्रत्ययः = {'प्रत्ययः': '', 'आर्धधातुकम्': True}
        पदम्.कृत्प्रत्ययः = {'प्रत्ययः': 'ल्यप्', 'आर्धधातुकम्': True}
        आर्धधातुके_२_४_३५(पदम्)
        self.assertEqual(पदम्.धातुः['आदेशः'], 'जग्धिः')

    def test_आर्धधातुके_२_४_३५_अद्_(self):
        धातुः = {'धातुः': 'अद्', 'सेट्': True}
        पदम् = तिङन्तरूपम्(धातुः, लकारः.लृट्, True, 0, 0)
        पदम्.विकरणप्रत्ययः = {'प्रत्ययः': 'ल्यप्', 'आर्धधातुकम्': False}
        आर्धधातुके_२_४_३५(पदम्)
        self.assertEqual(पदम्.धातुः.get('आदेशः'), None)

    def test_अस्(self):
        धातुः = {'धातुः': 'अस्', 'सेट्': True}
        पदम् = तिङन्तरूपम्(धातुः, लकारः.लृट्, True, 0, 0)
        पदम्.विकरणप्रत्ययः = {'प्रत्ययः': 'सिप्', 'आर्धधातुकम्': True}
        आर्धधातुके_२_४_३५(पदम्)
        self.assertEqual(पदम्.धातुः['आदेशः'], 'भू')

    def test_अदो_जग्धिर्ल्यप्ति_किति_२_४_३६_त(self):
        धातुः = {'धातुः': 'अद्', 'सेट्': True}
        पदम् = तिङन्तरूपम्(धातुः, लकारः.लृट्, True, 0, 0)
        पदम्.विकरणप्रत्ययः = {'प्रत्ययः': '', 'आर्धधातुकम्': True}
        पदम्.कृत्प्रत्ययः = {'प्रत्ययः': 'तव्यत्', 'आर्धधातुकम्': True}
        आर्धधातुके_२_४_३५(पदम्)
        self.assertEqual(पदम्.धातुः.get('आदेशः'), 'जग्धिः')

    def test_अदो_जग्धिर्ल्यप्ति_किति_२_४_३६_किति(self):
        धातुः = {'धातुः': 'अद्', 'सेट्': True}
        पदम् = तिङन्तरूपम्(धातुः, लकारः.लृट्, True, 0, 0)
        पदम्.विकरणप्रत्ययः = {'प्रत्ययः': '', 'आर्धधातुकम्': True}
        पदम्.कृत्प्रत्ययः = {'प्रत्ययः': 'क्त', 'आर्धधातुकम्': True}
        आर्धधातुके_२_४_३५(पदम्)
        self.assertEqual(पदम्.धातुः.get('आदेशः'), 'जग्धिः')


if __name__ == '__main__':
    unittest.main()
